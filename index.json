{
  "stats": {
    "suites": 7,
    "tests": 17,
    "passes": 11,
    "pending": 0,
    "failures": 2,
    "testsRegistered": 17,
    "passPercent": 64.70588235294117,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 4,
    "hasSkipped": true,
    "start": "2023-10-27T09:26:34.580Z",
    "end": "2023-10-27T09:27:56.614Z",
    "duration": 82034
  },
  "results": [
    {
      "uuid": "3683aa42-902a-46af-b773-2e07114144f7",
      "title": "",
      "fullFile": "cypress\\tests\\components\\FooterTest.js",
      "file": "cypress\\tests\\components\\FooterTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "83efb6ea-8cd2-469a-a817-e2d16c56a133",
          "title": "Footer Component Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test for Contact Us",
              "fullTitle": "Footer Component Test Test for Contact Us",
              "timedOut": null,
              "duration": 2064,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedContactUs = {\n  header: \"Get in Touch\",\n  address: \"2390 El Camino Real\",\n  phone: \"+440 123456\",\n  email: \"demo@blazemeter.com\"\n};\nfooterComp.getContactUsData().then(actualContactUs => {\n  cy.wrap('').then(() => {\n    // expect(actualContactUs).to.eql(expectedContactUs)\n    expect(actualContactUs.header).to.equal(expectedContactUs.header);\n    expect(actualContactUs.desc).to.contains(expectedContactUs.address);\n    expect(actualContactUs.desc).to.contains(expectedContactUs.phone);\n    expect(actualContactUs.desc).to.contains(expectedContactUs.email);\n  });\n});",
              "err": {},
              "uuid": "7821badd-d71e-4b11-b268-37fbe61ab126",
              "parentUUID": "83efb6ea-8cd2-469a-a817-e2d16c56a133",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7821badd-d71e-4b11-b268-37fbe61ab126"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2064,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "54e03d17-65d4-42da-955c-0086bf2afd2d",
      "title": "",
      "fullFile": "cypress\\tests\\components\\HeaderTest.js",
      "file": "cypress\\tests\\components\\HeaderTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e615193e-469a-47b7-bec6-2b47d5b07928",
          "title": "Header Component Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test for brand logo",
              "fullTitle": "Header Component Test Test for brand logo",
              "timedOut": null,
              "duration": 2033,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "headerComp.brandLogoImg().should('be.visible');\nheaderComp.brandLogo().should('contain.text', BRAND_TEXT);",
              "err": {},
              "uuid": "0ea94231-9272-433e-b12d-75306b7c1e23",
              "parentUUID": "e615193e-469a-47b7-bec6-2b47d5b07928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test for header menu details",
              "fullTitle": "Header Component Test Test for header menu details",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ExpectedMenuDetails = [{\n  \"text\": \"Home (current)\",\n  \"href\": \"index.html\"\n}, {\n  \"text\": \"Contact\",\n  \"href\": \"#\"\n}, {\n  \"text\": \"About us\",\n  \"href\": \"#\"\n}, {\n  \"text\": \"Cart\",\n  \"href\": \"cart.html\"\n}, {\n  \"text\": \"Log in\",\n  \"href\": \"#\"\n}, {\n  \"text\": \"Sign up\",\n  \"href\": \"#\"\n}];\nheaderComp.getMenuDetails().then(actualMenuDetails => {\n  cy.wrap('').then(() => {\n    expect(actualMenuDetails).to.be.deep.eq(ExpectedMenuDetails);\n  });\n});",
              "err": {},
              "uuid": "14676f2b-bb72-4063-a670-51ae0236ed9e",
              "parentUUID": "e615193e-469a-47b7-bec6-2b47d5b07928",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ea94231-9272-433e-b12d-75306b7c1e23",
            "14676f2b-bb72-4063-a670-51ae0236ed9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "df4a1eeb-a82b-47f4-b2d0-d62c834b264c",
      "title": "",
      "fullFile": "cypress\\tests\\components\\HomePageCategoryTest.js",
      "file": "cypress\\tests\\components\\HomePageCategoryTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cf47177c-ecb0-4a87-a99d-5b23c6f12f43",
          "title": "Home Page Category Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to filter phone products",
              "fullTitle": "Home Page Category Test should be able to filter phone products",
              "timedOut": null,
              "duration": 8025,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "verifyCategoryFilterBy(`${product}`);",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `entries`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Home Page Category Test`",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `entries`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Home Page Category Test`\n    at cypressErr (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:75008:18)\n    at Object.errByPath (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:75063:10)\n    at checkForXhr (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:135520:84)\n    at <unknown> (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:135543:28)\n    at tryCatcher (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:143908:68)\n    at <unknown> (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:143849:14)\n    at tryCatcher (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at HomePageAPI._waitForEntriesRequest (webpack://cypress-start/./cypress/support/HomePageAPI.js:14:11)\n    at HomePageAPI.waitForHomePageLoaded (webpack://cypress-start/./cypress/support/HomePageAPI.js:9:13)\n    at Context.eval (webpack://cypress-start/./cypress/tests/components/HomePageCategoryTest.js:8:20)",
                "diff": null
              },
              "uuid": "8b48b19f-723f-4dba-a27a-21586551968c",
              "parentUUID": "cf47177c-ecb0-4a87-a99d-5b23c6f12f43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to filter notebook products",
              "fullTitle": "Home Page Category Test should be able to filter notebook products",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyCategoryFilterBy(`${product}`);",
              "err": {},
              "uuid": "0fbc4837-170b-4a34-8587-2fb4166fd657",
              "parentUUID": "cf47177c-ecb0-4a87-a99d-5b23c6f12f43",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should be able to filter monitor products",
              "fullTitle": "Home Page Category Test should be able to filter monitor products",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyCategoryFilterBy(`${product}`);",
              "err": {},
              "uuid": "3863c904-ebaf-4b08-ab7a-e2aca577f1c2",
              "parentUUID": "cf47177c-ecb0-4a87-a99d-5b23c6f12f43",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should be able to filter products by pagination next",
              "fullTitle": "Home Page Category Test should be able to filter products by pagination next",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('/pagination').as('paginations');\ncy.get('button[id=\"next2\"]').click({\n  force: true\n}); // make sure click the item\ncy.wait('@paginations');\ncy.request({\n  method: \"POST\",\n  url: \"https://api.demoblaze.com/pagination\",\n  body: {\n    id: \"9\"\n  }\n}).then(res => {\n  let apiProductData = res.body.Items.map(item => {\n    return {\n      itemName: item.title.replace('\\n', ''),\n      itemPrice: `$${item.price}`\n    };\n  });\n  new _DemoBlazePage.default().getAllCardData().then(allCardData => {\n    cy.wrap('').then(() => {\n      expect(allCardData).to.be.eql(apiProductData);\n    });\n  });\n});",
              "err": {},
              "uuid": "1cc66dec-615a-4241-8259-01c276177c37",
              "parentUUID": "cf47177c-ecb0-4a87-a99d-5b23c6f12f43",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should be able to filter products by pagination prev",
              "fullTitle": "Home Page Category Test should be able to filter products by pagination prev",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('/pagination').as('paginations');\ncy.get('button[id=\"prev2\"]').click({\n  force: true\n}); // make sure click the item\ncy.wait('@paginations');\ncy.request({\n  method: \"POST\",\n  url: \"https://api.demoblaze.com/pagination\",\n  body: {\n    id: \"1\"\n  }\n}).then(res => {\n  let apiProductData = res.body.Items.map(item => {\n    return {\n      itemName: item.title.replace('\\n', ''),\n      itemPrice: `$${item.price}`\n    };\n  });\n  new _DemoBlazePage.default().getAllCardData().then(allCardData => {\n    cy.wrap('').then(() => {\n      expect(allCardData).to.be.eql(apiProductData);\n    });\n  });\n});",
              "err": {},
              "uuid": "eee6c69f-b2d8-4dc8-a484-90e30f2527d9",
              "parentUUID": "cf47177c-ecb0-4a87-a99d-5b23c6f12f43",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8b48b19f-723f-4dba-a27a-21586551968c"
          ],
          "pending": [],
          "skipped": [
            "0fbc4837-170b-4a34-8587-2fb4166fd657",
            "3863c904-ebaf-4b08-ab7a-e2aca577f1c2",
            "1cc66dec-615a-4241-8259-01c276177c37",
            "eee6c69f-b2d8-4dc8-a484-90e30f2527d9"
          ],
          "duration": 8025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d869477e-36bb-4516-8cc6-9bd5376c3949",
      "title": "",
      "fullFile": "cypress\\tests\\components\\ProductDetailTest.js",
      "file": "cypress\\tests\\components\\ProductDetailTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82643900-89c3-4162-8d37-1d1fe6ff32ef",
          "title": "Product Detail Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should be able to verify product details",
              "fullTitle": "Product Detail Test It should be able to verify product details",
              "timedOut": null,
              "duration": 4250,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomProduct = apiProduct[Math.floor(Math.random() * apiProduct.length)];\ncy.log(JSON.stringify(randomProduct));\nconst randomProductTitle = randomProduct.title.trim().replace('\\n', '');\nconst randomProductDesc = randomProduct.desc.trim().replace('\\n', '');\ncy.contains(randomProductTitle).click();\nconst productDetails = new _ProductDetailComponent.default();\nproductDetails.getProductImg().should('be.visible');\nproductDetails.getProductName().should('have.text', randomProductTitle);\nproductDetails.getProductPrice().should('contain.text', randomProduct.price);\nproductDetails.getAddToCartBtn().should('be.visible');\nproductDetails.getProductDesc().should('not.be.empty');",
              "err": {},
              "uuid": "9b396578-1f08-4796-9dc3-6149c7dfa0de",
              "parentUUID": "82643900-89c3-4162-8d37-1d1fe6ff32ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b396578-1f08-4796-9dc3-6149c7dfa0de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4250,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c036d733-be6a-4da8-be2d-e2fb5bd38fe4",
      "title": "",
      "fullFile": "cypress\\tests\\order\\OrderItem.js",
      "file": "cypress\\tests\\order\\OrderItem.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6636099a-3a00-4519-91ae-3c3d2d453f77",
          "title": "Order Item Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Order item as guest",
              "fullTitle": "Order Item Test Order item as guest",
              "timedOut": null,
              "duration": 6962,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "purchaseItem();",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `entries`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `entries`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:75008:18)\n    at Object.errByPath (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:75063:10)\n    at checkForXhr (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:135520:84)\n    at <unknown> (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:135543:28)\n    at tryCatcher (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:143908:68)\n    at <unknown> (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:143849:14)\n    at tryCatcher (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (https://www.demoblaze.com/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at HomePageAPI._waitForEntriesRequest (webpack://cypress-start/./cypress/support/HomePageAPI.js:14:11)\n    at HomePageAPI.getHomePageProducts (webpack://cypress-start/./cypress/support/HomePageAPI.js:4:13)\n    at purchaseItem (webpack://cypress-start/./cypress/tests/order/OrderItem.js:60:16)\n    at Context.eval (webpack://cypress-start/./cypress/tests/order/OrderItem.js:28:8)",
                "diff": null
              },
              "uuid": "e8f9741a-7e26-4162-98b1-19f20a4bce25",
              "parentUUID": "6636099a-3a00-4519-91ae-3c3d2d453f77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Order item as logged in user",
              "fullTitle": "Order Item Test Order item as logged in user",
              "timedOut": null,
              "duration": 10963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login\nconst LOGIN_CRED = {\n  username: \"binh\",\n  password: \"admin\"\n};\nconst {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username, password);\n//Purchase\npurchaseItem();",
              "err": {},
              "uuid": "9638991c-9eac-43e4-81b8-1337dca7dad4",
              "parentUUID": "6636099a-3a00-4519-91ae-3c3d2d453f77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9638991c-9eac-43e4-81b8-1337dca7dad4"
          ],
          "failures": [
            "e8f9741a-7e26-4162-98b1-19f20a4bce25"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17925,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a7230252-8102-4b11-9896-7e773217630d",
      "title": "",
      "fullFile": "cypress\\tests\\signup\\SignUpTest.js",
      "file": "cypress\\tests\\signup\\SignUpTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb930a05-25fa-4d98-b039-a0208264901a",
          "title": "Signup Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to sign up with correct cred",
              "fullTitle": "Signup Test should be able to sign up with correct cred",
              "timedOut": null,
              "duration": 3730,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = SIGN_UP_CRED;\nsignup(username, password);\ncy.on('window:alert', message => {\n  expect(message).to.contains('Sign up successful');\n});",
              "err": {},
              "uuid": "cdf343fb-fe52-4e2d-82f9-f4c38379fd80",
              "parentUUID": "bb930a05-25fa-4d98-b039-a0208264901a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see existing username",
              "fullTitle": "Signup Test should be able to see existing username",
              "timedOut": null,
              "duration": 1592,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  password\n} = SIGN_UP_CRED;\nsignup('binh', password);\ncy.on('window:alert', message => {\n  expect(message).to.contains('This user already exist');\n});",
              "err": {},
              "uuid": "d81cae28-3a1f-4059-884c-aad3b54698c5",
              "parentUUID": "bb930a05-25fa-4d98-b039-a0208264901a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cdf343fb-fe52-4e2d-82f9-f4c38379fd80",
            "d81cae28-3a1f-4059-884c-aad3b54698c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "095984e0-6e58-460c-8185-6fabbca0b075",
      "title": "",
      "fullFile": "cypress\\tests\\authen\\LoginTest.js",
      "file": "cypress\\tests\\authen\\LoginTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87cc43e2-2a95-4f9d-aba0-b1d716058b29",
          "title": "Login Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to login with correct cred",
              "fullTitle": "Login Test should be able to login with correct cred",
              "timedOut": null,
              "duration": 7041,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username, password);\nheaderComp.getLoggedUsername().should('be.visible');\nheaderComp.getLoggedUsername().should('contain.text', `Welcome ${LOGIN_CRED.username}`);",
              "err": {},
              "uuid": "cef80d30-a56b-4ef0-b650-103a90492218",
              "parentUUID": "87cc43e2-2a95-4f9d-aba0-b1d716058b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see blank username and password",
              "fullTitle": "Login Test should be able to see blank username and password",
              "timedOut": null,
              "duration": 870,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "headerComp.getLoginLink().click();\nloginComp.getLoginBtn().click();\ncy.on('window:alert', message => {\n  expect(message).to.contains('Please fill out Username and Password');\n});",
              "err": {},
              "uuid": "0b786d8b-23bf-4c6b-ad89-06532551e0e0",
              "parentUUID": "87cc43e2-2a95-4f9d-aba0-b1d716058b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see wrong username",
              "fullTitle": "Login Test should be able to see wrong username",
              "timedOut": null,
              "duration": 1810,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username + \"_WRONG\", password);\ncy.on('window:alert', message => {\n  expect(message).to.contains('User does not exist');\n});",
              "err": {},
              "uuid": "42e620b3-fb47-420d-8662-4f4f6caff46f",
              "parentUUID": "87cc43e2-2a95-4f9d-aba0-b1d716058b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see wrong password",
              "fullTitle": "Login Test should be able to see wrong password",
              "timedOut": null,
              "duration": 2283,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username, password + \"_WRONG\");\ncy.on('window:alert', message => {\n  expect(message).to.contains('Wrong password');\n});",
              "err": {},
              "uuid": "a3647d42-1c48-4870-9578-f3235137b77e",
              "parentUUID": "87cc43e2-2a95-4f9d-aba0-b1d716058b29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cef80d30-a56b-4ef0-b650-103a90492218",
            "0b786d8b-23bf-4c6b-ad89-06532551e0e0",
            "42e620b3-fb47-420d-8662-4f4f6caff46f",
            "a3647d42-1c48-4870-9578-f3235137b77e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12004,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}